---
title: "Bivariate Viz"
---

Use this file for practice with the **bivariate viz** in-class activity.  Refer to the class website for details.




---
title: "Bivariate Viz"
number-sections: true
execute: 
  warning: false
fig-height: 2.75
fig-width: 4.25
fig-env: 'figure'
fig-pos: 'h'
fig-align: center
code-fold: false
---



### General guidance for building bivariate plots

As with univariate plots, an appropriate visualization for the relationship between 2 variables depends upon whether the variables are **quantitative** or **categorical**. In general:

-   Each **quantitative variable** requires a new *axis* (or a quantitative *scale* if we run out of axes).
-   Each **categorical variable** requires a new way to "group" the graphic (eg: using colors, shapes, separate facets, etc)
-   For visualizations in which **overlap** in glyphs or plots obscures the patterns, try faceting or transparency.


## Exercises (required)


[Github user Tony McGovern](https://github.com/tonmcg/US_County_Level_Election_Results_08-20) has compiled and made available 2020/2016/2012 presidential election results for most of 3000+ U.S. counties, except Alaska. (Image: [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:Map_of_USA_with_county_outlines_(black_%26_white).png))

![](https://upload.wikimedia.org/wikipedia/commons/6/68/Map_of_USA_with_county_outlines_%28black_%26_white%29.png)

A wrangled version of this data, is imported below, after being combined with:

-   2013 county-level demographics from the `df_county_demographics` data set from the `choroplethr` R package
-   historical voting trends in the state in which the county falls (from <https://www.270towin.com/content/blue-and-red-states>):
    - red = consistently Republican
    - blue = consistently Democratic
    - purple = something in between

```{r}
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")

# Check it out
head(elections)
```

We'll use this data to explore voting outcomes within the U.S.'s 2-party system. Here's a list of candidates by year:

| year | Republican candidate | Democratic candidate |
|:-----|:---------------------|:---------------------|
| 2020 | Donald Trump         | Joe Biden            |
| 2016 | Donald Trump         | Hillary Clinton      |
| 2012 | Mitt Romney          | Barack Obama         |



### Exercise 0: Review {.unnumbered}

#### Part a {.unnumbered}

How many, or roughly what percent, of the 3000+ counties did the Republican candidate win in 2020?

-   Take a guess.
-   Then make a plot of the `winner` variable.
-   Then discuss what follow-up questions you might have (and that our data might help us answer).

```{r}
```

#### Part b {.unnumbered}

The `repub_pct_20` variable provides more detail about the Republican support in each county. Construct a plot of `repub_pct_20`.

Notice that the distribution of Republican support from county to county is slightly **left skewed** or **negatively skewed**.

What follow-up questions do you have?


```{r}
# Import data
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")

# How many students have now filled out the survey?
nrow(survey)

# What type of variables do we have?
str(survey)
```


```{r}
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")

# Check it out
head(elections)
```


### Exercise 0:

```{r}
library(tidyverse)

ggplot(elections, aes(x = winner_20)) + 
  geom_bar()
ggplot(elections, aes(x = repub_pct_20)) + 
  geom_histogram(color = "white")
ggplot(elections, aes(x = repub_pct_20)) + 
  geom_density()
```

### Exercise 1: quantitative vs quantitative intuition check {.unnumbered}

See next exercise.


### Exercise 2: 2 quantitiative variables {.unnumbered}

```{r}
# Set up the plotting frame
# How does this differ than the frame for our histogram of repub_pct_20 alone?
# ANSWER: we added a y-axis variable
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))

# Add a layer of points for each county
# Take note of the geom: geom_point
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point()

# Change the shape of the points
# What happens if you change the shape to another number?
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(shape = 3)

# YOU TRY: Modify the code to make the points "orange"
# NOTE: Try to anticipate if "color" or "fill" will be useful here. Then try both.
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(color = "orange")


# Add a layer that represents each county by the state it's in
# Take note of the geom and the info it needs to run!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_text(aes(label = state_abbr))
```


### Exercise 3: Reflect {.unnumbered}

the higher the Republican support in 2016, the higher it was in 2020. There are some counties in Texas and Utah where the R support in 2020 was disproportionately higher than in 2016.


### Exercise 4: Visualizing trend {.unnumbered}

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth()
```

#### Part a {.unnumbered}

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_smooth()
```

#### Part b {.unnumbered}

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth(method = "lm")
```


### Exercise 5: Your turn {.unnumbered}

There's a moderate, positive association between R support and median age -- the older the average age in a county, the higher the R support tends to be. However, there's a stronger, *negative* association between R support and median rent -- the higher the rent (a proxy for cost of living), the lower the R support tends to be.

```{r}
# Scatterplot of repub_pct_20 vs median_rent
ggplot(elections, aes(y = repub_pct_20, x = median_rent)) +
  geom_point() 

# Scatterplot of repub_pct_20 vs median_age
ggplot(elections, aes(y = repub_pct_20, x = median_age)) +
  geom_point() 


```


### Exercise 6: A sad scatterplot {.unnumbered}

See next exercise.


### Exercise 7: quantitative vs categorical -- violins & boxes {.unnumbered}

```{r }
# Side-by-side violin plots
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_violin()

# Side-by-side boxplots (defined below)
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_boxplot()
```

**REFLECT:**

There's quite a bit of range in county-level R support within blue, purple, and red states. However, R support tends to be higher in red states and lower in blue states.


### Exercise 8: quantitative vs categorical -- intuition check {.unnumbered}

See next exercise.


### Exercise 9: quantitative vs categorical -- density plots {.unnumbered}

```{r}
# The colors used don't match up with the blue, purple, red labels
# The density plots are on top of each other
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density()

# scale_fill_manual "hard codes" or defines what colors to use for the fill categories
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red"))

# alpha = 0.5 adds transparency
# the closer alpha is to 0, the more transparent.
# the closer alpha is to 1, the more opaque.
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density(alpha = 0.5) +
  scale_fill_manual(values = c("blue", "purple", "red"))

# facet_wrap separates the density plots into "facets" for each historical group
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red")) +
  facet_wrap(~ historical)

# Let's try a similar grouping strategy with a histogram instead of density plot.
# Why is this terrible?
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_histogram(color = "white") +
  scale_fill_manual(values = c("blue", "purple", "red"))
```


### Exercise 10 {.unnumbered}

-   One pro of density plots relative to boxplots: doesn't oversimplify the data / boil the data down to just 5 numbers.

-   Name one con of density plots relative to boxplots: boxplots can be easier to interpret


### Exercise 11: categorical vs categorical intuition check {.unnumbered}

see exercise below


### Exercise 12: categorical vs categorical {.unnumbered}

```{r}
# A stacked bar plot
# historical = x axis / bar categories
# winner_20 = fills the bars
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar()

# A faceted bar plot
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~ historical)

# A side-by-side bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "dodge")

# A proportional bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "fill")
```

#### Part a {.unnumbered}

pro = easier to compare the relative outcomes in blue vs purple vs red states con = lose track of how many counties fall into blue vs purple vs red states


### Exercise 13: Practice (now or later) {.unnumbered}

```{r}
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")

# How do 3pm temperatures (temp3pm) differ by location?
ggplot(weather, aes(x = temp3pm, fill = location)) + 
  geom_density(alpha = 0.5)
ggplot(weather, aes(y = temp3pm, x = location)) + 
  geom_boxplot()

# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?
ggplot(weather, aes(y = temp3pm, x = temp9am)) + 
  geom_point()

# How do the number of rainy days (raintoday) differ by location?
ggplot(weather, aes(x = location, fill = raintoday)) + 
  geom_bar()
```

### Optional exercise 1: Dealing with lots of categories {.unnumbered}

```{r fig.height = 10, fig.width = 8}
# Install ggridges package
library(ggridges)

# Make our first joy plot
# THINK: What DON'T you like about this?
ggplot(elections, aes(x = repub_pct_20, y = state_abbr)) + 
  geom_density_ridges()

# Let's put the states in order by Republican support, not alphabet
# How do you think fct_reorder works? We'll learn about this later in the semester.
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + 
  geom_density_ridges(alpha = 0.5)

# YOUR TURN: color/fill the ridges according to a state's historical voting patterns 
# and add meaningful axis labels
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) + 
  geom_density_ridges(alpha = 0.5) + 
  labs(y = "state", x = "2020 Republican support (%)") + 
  scale_fill_manual(values = c("blue", "purple", "red"))

```


### Optional exercise 2: total outcomes by state {.unnumbered}

```{r fig.height = 10, fig.width = 8}
elections_by_state <- read.csv("https://mac-stat.github.io/data/election_2020_by_state.csv")

ggplot(elections_by_state, aes(y = repub_pct_20, x = repub_pct_16)) + 
  geom_point()

# YOU TRY
# Start by creating a "scatterplot" of state_abbr (y-axis) by 2020 Republican support on the x-axis
# Color the points red
ggplot(elections_by_state, aes(x = repub_pct_20, y = state_abbr)) + 
  geom_point(color = "red")

# YOU TRY
# Reorder the states in terms of their 2020 Republican support (not alphabet)
ggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + 
  geom_point(color = "red")

# Finally, add ANOTHER layer of points for the 2016 outcomes
# What info does this new geom_point() layer need to run?
ggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + 
  geom_point(color = "red") + 
  geom_point(aes(x = repub_pct_16, y = state_abbr))
```

